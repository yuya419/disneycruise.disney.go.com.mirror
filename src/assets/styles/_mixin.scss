@use 'sass:map';

// ホバー
@mixin hover {

    @media screen and (min-width: 1025px) and (hover: hover),
    screen and (min-width: 1025px) and (pointer: fine) {
        &:hover {
            @content;
        }
    }
}

// スクリーンリーダーテキスト
$vi-screen-reader-text: "screen-reader-text";

@if $vi-screen-reader-text {
  %#{$vi-screen-reader-text} {
    clip    : rect(1px, 1px, 1px, 1px);
    position: absolute;
    left    : 0;
    top     : 0;
  }

  .#{$vi-screen-reader-text} {
    @extend %#{$vi-screen-reader-text};
  }
}

/* line-heightのハーフ・レディングを打ち消す */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
@mixin leadingTrim($lh) {

	&::before,
	&::after {
		content    : '';
		display    : block;
		inline-size: 0;
		block-size : 1px;
	}

	&::before {
		margin-block-end: calc((1 - #{$lh}) * 0.5em);
	}

	&::after {
		margin-block-start: calc((1 - #{$lh}) * 0.5em);
	}
}

/* pxをvwに変換 */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
//pxをvwに変換
@function _get_vw($size, $viewport: 390) {
    $rate: calc(100 / $viewport);
    @return $rate * $size * 1vw;
}

//pxをvwに変換 - フォントサイズ
@mixin font-vw($font_size: 10, $viewsize: 390) {
    font-size: $font_size * 1px;
    font-size: _get_vw($font_size, $viewsize);
}

//pxをvwに変換 - フリースタイル
@mixin free-vw($property, $size, $viewsize: 390) {
    #{$property}: $size * 1px;
    #{$property}: _get_vw($size, $viewsize);
}

/* pxをvhに変換 */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
//pxをvhに変換
@function _get_vh($size, $viewport: 663) {
    $rate: calc(100 / $viewport);
    @return $rate * $size * 1vh;
}

//pxをvhに変換 - フォントサイズ
@mixin font-vh($font_size: 10, $viewsize: 663) {
    font-size: $font_size * 1px;
    font-size: _get_vh($font_size, $viewsize);
}

//pxをvhに変換 - フリースタイル
@mixin free-vh($property, $size, $viewsize: 663) {
    #{$property}: $size * 1px;
    #{$property}: _get_vh($size, $viewsize);
}

/* メディアクエリ */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
$breakpoints: ('sm': 640px, 'md': 1024px, 'lg': 1600px, 'xl': 1920px);
$minmax     : ('min': min, 'max': max);

@mixin media($size, $width: 'max') {
    @media screen and (#{map.get($minmax, $width)}-width: #{map.get($breakpoints, $size)}) {
        @content;
    }
}